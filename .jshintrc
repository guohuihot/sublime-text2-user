{
  // The plugin looks for a .jshintrc file in the same directory as the source
  // file you"re prettifying (or any directory above if it doesn"t exist, or in
  // your home folder if everything else fails) and uses those options along
  // the default ones.

  // Details: https://github.com/victorporof/Sublime-JSHint#using-your-own-jshintrc-options
  // Example: https://github.com/jshint/jshint/blob/master/examples/.jshintrc
  // Documentation: http://www.jshint.com/docs/options/

  "browser": true,
  "esnext": true,
  "globalstrict": true,

  "bitwise"       : false, //禁用位运算符，位运算符在 js 中使用较少，经常是把 && 错输成 &
  "curly"         : false, //循环或者条件语句必须使用花括号包围
  "camelcase"     : true, // 使用驼峰命名(camelCase)或全大写下划线命名(UPPER_CASE)
  "eqeqeq"        : false, //强制使用三等号
  "indent"        : 4,// 代码缩进
  "latedef"       : "nofunc", // 禁止定义之前使用变量，忽略 function 函数声明
  "newcap"        : true, // 构造器函数首字母大写
  "quotmark"      : true, // 为 true 时，禁止单引号和双引号混用
  "undef"         : true, // 变量未定义
  "unused"        : true, // 变量未使用
  "strict"        : false, // 严格模式
  "maxparams"     : 4, //最多参数个数
  "immed"         : true, 
  //匿名函数调用必须 (function() { // body }()); 而不是 (function() { // body })();
  "maxdepth"      : 4, //最大嵌套深度
  "maxcomplexity" : 4, // 复杂度检测
  "maxlen"        : 100, // 最大行数
  "asi"           : false,
  "boss"          : true, //控制“缺少分号”的警告
  "lastsemic"     : true, // 检查一行代码最后声明后面的分号是否遗漏
  "laxcomma"      : true, //检查不安全的折行，忽略逗号在最前面的编程风格
  "loopfunc"      : true, //检查循环内嵌套 function
  "multistr"      : true, // 检查多行字符串
  "notypeof"      : true, // 检查无效的 typeof 操作符值
  "sub"           : true, // person["name"] vs. person.name
  "supernew"      : true, // new function () { ... } 和 new Object ;
  "validthis"     : true, // 在非构造器函数中使用 this 
  "node"          : true,
  "jquery"        : true,
  "globals": {
      "define"  : false,
      "seajs"   : false,
      "uri2MVC" : false
  }
}
